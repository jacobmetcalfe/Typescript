{"version":3,"sources":["jsonTodoCollection.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAsC;AACtC,mDAAkD;AAClD,6BAA+B;AAC/B,kDAAoD;AAKpD;IAAwC,sCAAc;IAElD,4BAAmB,QAAgB,EAAE,SAA0B;QAA1B,0BAAA,EAAA,cAA0B;QAA/D,YACI,kBAAM,QAAQ,EAAE,EAAE,CAAC,SAUtB;QAXkB,cAAQ,GAAR,QAAQ,CAAQ;QAE/B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;QAClD,IAAI,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACpC,IAAI,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;YACjD,OAAO,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAChD,IAAI,mBAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EADxB,CACwB,CAAC,CAAC;SACrD;aAAM;YACH,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC;YAC9C,SAAS,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAA/B,CAA+B,CAAC,CAAC;SAC9D;;IACL,CAAC;IAED,oCAAO,GAAP,UAAQ,IAAY;QAChB,IAAI,MAAM,GAAG,iBAAM,OAAO,YAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,yCAAY,GAAZ,UAAa,EAAU,EAAE,QAAiB;QACtC,iBAAM,YAAY,YAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,2CAAc,GAAd;QACI,iBAAM,cAAc,WAAE,CAAC;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAEO,uCAAU,GAAlB;QACI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,iBAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC;IACnE,CAAC;IACL,yBAAC;AAAD,CAlCA,AAkCC,CAlCuC,+BAAc,GAkCrD;AAlCY,gDAAkB","file":"jsonTodoCollection.js","sourcesContent":["import { TodoItem } from \"./todoItem\";\r\nimport { TodoCollection } from \"./todoCollection\";\r\nimport * as lowdb from \"lowdb\";\r\nimport * as FileSync from \"lowdb/adapters/FileSync\";\r\n\r\ntype schemaType = {\r\n    tasks: { id: number; task: string; complete: boolean; }[]\r\n};\r\nexport class JsonTodoCollection extends TodoCollection {\r\n    private database: lowdb.LowdbSync<schemaType>;\r\n    constructor(public userName: string, todoItems: TodoItem[] = []) {\r\n        super(userName, []);\r\n        this.database = lowdb(new FileSync(\"Todos.json\"));\r\n        if (this.database.has(\"tasks\").value()) {\r\n            let dbItems = this.database.get(\"tasks\").value();\r\n            dbItems.forEach(item => this.itemMap.set(item.id,\r\n            new TodoItem(item.id, item.task, item.complete)));\r\n        } else {\r\n            this.database.set(\"tasks\", todoItems).write();\r\n            todoItems.forEach(item => this.itemMap.set(item.id, item));\r\n        }\r\n    }\r\n\r\n    addTodo(task: string): number {\r\n        let result = super.addTodo(task);\r\n        this.storeTasks();\r\n        return result;\r\n    }\r\n\r\n    markComplete(id: number, complete: boolean): void {\r\n        super.markComplete(id, complete);\r\n        this.storeTasks();\r\n    }\r\n\r\n    removeComplete(): void {\r\n        super.removeComplete();\r\n        this.storeTasks();\r\n    }\r\n    \r\n    private storeTasks() {\r\n        this.database.set(\"tasks\", [...this.itemMap.values()]).write();\r\n    }\r\n}"]}